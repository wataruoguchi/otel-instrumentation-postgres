name: Release

on:
  push:
    tags: ['v*']
    paths-ignore: ['example/**']

jobs:
  release:
    name: Build, Test, Publish & Release
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./lib

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'
          cache-dependency-path: './lib/package-lock.json'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

      - name: Build package
        run: npm run build

      - name: Publish to npm
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            ## What's Changed
            
            This release includes:
            - OpenTelemetry instrumentation for postgres.js
            - Query performance monitoring
            - Connection tracking
            - Comprehensive metrics and traces
            
            ## Installation
            
            ```bash
            npm install otel-instrumentation-postgres
            ```
            
            ## Quick Start
            
            ```typescript
            import postgres from "postgres";
            import { createOTELEmitter } from "otel-instrumentation-postgres";
            
            const sql = postgres(process.env.DATABASE_URL);
            const instrumentedSql = createOTELEmitter(sql);
            
            // All queries are now tracked automatically
            const users = await instrumentedSql`SELECT * FROM users`;
            ```
          draft: false
          prerelease: false 